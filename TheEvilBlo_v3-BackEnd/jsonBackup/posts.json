{
	"b6npo2519jiryi76": {
		"title": "Date",
		"body": "Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January 1970 UTC.",
		"owner": "JavaScript",
		"editable": false,
		"replies": [
			{
				"body": "Muy practico y con muchas herramientas para trabajar con fechas.",
				"owner": "Esteban",
				"timestamp": "2018-06-10T04:11:11.542Z"
			},
			{
				"body": "HOla",
				"owner": "Esteban",
				"timestamp": "2018-07-06T02:11:21.012Z"
			}
		],
		"timestamp": "2018-06-09T20:14:20.772Z"
	},
	"b6npo2519jiryib56": {
		"body": "Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. XMLHttpRequest is used heavily in Ajax programming.",
		"editable": true,
		"owner": "Mozilla",
		"timestamp": "2018-06-09T20:49:53.493Z",
		"title": "XMLHttpRequest"
	},
	"b6npo2519jiryi98": {
		"body": "The HyperText Transfer Protocol (HTTP) is the underlying network protocol that enables transfer of hypermedia documents on the Web, typically between a browser and a server so that humans can read them. The current version of the HTTP specification is called HTTP/2.",
		"editable": true,
		"owner": "Mozilla",
		"timestamp": "2018-06-09T20:55:08.222Z",
		"title": "HTTP"
	},
	"b6npo2519jiryibn": {
		"title": "HTTP response status codes",
		"body": "HTTP response status codes indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes: informational responses, successful responses, redirects, client errors, and servers errors.\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Status",
		"owner": "Mozilla",
		"editable": false,
		"replies": [
			{
				"body": "200 OK\nThe request has succeeded. The meaning of a success varies depending on the HTTP method:\nGET: The resource has been fetched and is transmitted in the message body.\nHEAD: The entity headers are in the message body.\nPUT or POST: The resource describing the result of the action is transmitted in the message body.\nTRACE: The message body contains the request message as received by the server",
				"owner": "Esteban",
				"timestamp": "2018-06-09T21:16:35.510Z"
			},
			{
				"body": "201 Created\nThe request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
				"owner": "Esteban",
				"timestamp": "2018-06-09T21:25:23.882Z"
			},
			{
				"body": "Hello",
				"owner": "Esteban",
				"timestamp": "2018-07-12T23:58:18.944Z"
			}
		],
		"timestamp": "2018-06-09T20:56:04.688Z"
	},
	"b6npo2519jiryibn23": {
		"title": "Como agregar un post nuevo en JSON 2",
		"body": "Usa el botón redondo con un símbolo de mas para abrir el formulario de agregar post.\n\n1. Agregar un titulo.\n2. Agregar el mensaje del post.\n\nUna ves que has terminado de escribir tu post has click en el botón Post.",
		"owner": "Esteban",
		"editable": true,
		"replies": [],
		"timestamp": "2018-07-13T02:51:13.580Z"
	},
	"b6npo2519jiryibas": {
		"title": "Como hacer un reply a un post.",
		"body": "Si quieres hacer un comentario a un post de alguien más puedes utilizar el botón de reply para abrir el formulario para agregar reply.",
		"owner": "Esteban",
		"editable": true,
		"replies": [],
		"timestamp": "2018-06-23T23:50:21.693Z"
	}
}